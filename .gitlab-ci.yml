stages:
    - build

variables:
    GIT_REMOTE: api-origin

image: docker-registry-dto.corp.amdocs.com/python_base20210222:3.7.9

.prerequisites:
    before_script:
        - cp $PYPIRC ~/.pypirc
        - git config --global http.sslverify false
        - git config user.email "${GITLAB_USER_EMAIL}"
        - git config user.name "${GITLAB_USER_NAME}"
        - if [ -n "$(git remote | grep $GIT_REMOTE)" ] ; then git remote remove "${GIT_REMOTE}" ; fi
        - git remote add "${GIT_REMOTE}" "https://oauth2:${AUTO_SELF_BUMPER}@${CI_SERVER_HOST}/${CI_PROJECT_PATH}"
        - git checkout -B "${CI_COMMIT_REF_NAME}"
        - git fetch
        - python -m venv venv
        - cp $PIPCONF venv/pip.conf
        - source venv/bin/activate
        - python -m pip install twine wheel
        - python -m pip install -r dev-requirements.txt
        - python -m pip install -r requirements.txt


build:snapshot:
    extends: .prerequisites
    stage: build
    script:
        - make ci_build
    rules:
        - if: '$CI_COMMIT_MESSAGE =~ /^AUTO-/ || $CI_COMMIT_MESSAGE =~ /MICRO-RELEASE-START/'
          when: never
        - if: '$CI_PIPELINE_SOURCE == "push"'
#  cache:
#    key: $CI_COMMIT_REF_NAME
#    paths:
#      - venv/

build:release:
    extends: .prerequisites
    stage: build
    script:
        - make release
    rules:
        - if: $CI_COMMIT_MESSAGE =~ /^AUTO-RELEASE/
          when: never
        - if: '$CI_COMMIT_MESSAGE =~ /^AUTO-BUILD/ && $CI_PIPELINE_SOURCE == "web" && $CI_COMMIT_REF_NAME == "master"'

build:micro_release:
    extends: .prerequisites
    stage: build
    script:
        - make micro_release
    rules:
        - if: $CI_COMMIT_MESSAGE =~ /^AUTO-MICRO-RELEASE/
          when: never
        - if: '$CI_COMMIT_MESSAGE =~ /^AUTO-BUILD/ && $CI_PIPELINE_SOURCE == "web" && $CI_COMMIT_REF_NAME =~ /-RELEASE-BRANCH$/'
